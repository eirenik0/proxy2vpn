name: Proxy2VPN Functional Tests

on:
  push:
    branches: [ main ]
    paths:
      - '**.sh'
      - 'tests/**'
      - 'profiles/**'
      - '.github/workflows/tests.yml'
      - 'Makefile'
      - '!.github/workflows/shellcheck.yml'  # Exclude changes to shellcheck workflow
  pull_request:
    branches: [ main ]
    paths:
      - '**.sh'
      - 'tests/**'
      - 'profiles/**'
      - '.github/workflows/tests.yml'
      - 'Makefile'
      - '!.github/workflows/shellcheck.yml'  # Exclude changes to shellcheck workflow
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    # Skip this workflow if specifically marked to skip tests
    if: ${{ !contains(github.event.commits[0].message, '[skip tests]') }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install minimal dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Make scripts executable
        run: |
          chmod +x proxy2vpn.sh
          chmod +x tests/*.sh
          chmod +x scripts/*.sh

      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          ./tests/run_integration_tests.sh

      - name: Test basic functionality
        run: |
          echo "Testing version command..."
          ./proxy2vpn.sh version

          echo "Testing help output..."
          # Help command exits with code 1 when run without args (by design)
          ./proxy2vpn.sh help || true

      - name: Test profile management
        run: |
          echo "Testing profile creation..."
          ./proxy2vpn.sh create-profile test_profile test_user test_pass

          echo "Testing profile listing..."
          ./proxy2vpn.sh list-profiles

      - name: Test server list functionality
        run: |
          echo "Testing server list update..."
          ./proxy2vpn.sh update-server-list

          echo "Testing country and city listing..."
          ./proxy2vpn.sh list-countries protonvpn
          ./proxy2vpn.sh list-cities protonvpn US

      - name: Test compose file import
        run: |
          # Create a simple test compose file
          cat > test-compose.yml << EOF
          x-vpn-base-test: &vpn-base-test
            image: qmcgaw/gluetun
            cap_add:
              - NET_ADMIN
            devices:
              - /dev/net/tun:/dev/net/tun
            env_file:
              - env.test

          services:
            vpn1:
              <<: *vpn-base-test
              ports:
                - "0.0.0.0:9999:8888/tcp"
              environment:
                - SERVER_CITIES=New York
                - VPN_SERVICE_PROVIDER=protonvpn
          EOF

          # Create a test env file needed for the compose file
          cat > env.test << EOF
          VPN_SERVICE_PROVIDER=protonvpn
          OPENVPN_USER=test_user
          OPENVPN_PASSWORD=test_password
          EOF

          # Run the import-compose test
          # We're just checking the script runs without errors,
          # actual container creation is tested elsewhere
          ./proxy2vpn.sh import-compose test-compose.yml || echo "Import test failed, but continuing"
